{"name":"Groupdate","tagline":"","body":"The simplest way to group by:\r\n\r\n- day\r\n- week\r\n- month\r\n- day of the week\r\n- hour of the day\r\n- and more (complete list at bottom)\r\n\r\n:tada: Time zones supported!! **The best part**\r\n\r\nWorks with Rails 3.0+\r\n\r\nSupports PostgreSQL and MySQL\r\n\r\n[![Build Status](https://travis-ci.org/ankane/groupdate.png)](https://travis-ci.org/ankane/groupdate)\r\n\r\n## Usage\r\n\r\n```ruby\r\nUser.group_by_day(:created_at).count\r\n# {\r\n#   2013-04-16 00:00:00 UTC => 50,\r\n#   2013-04-17 00:00:00 UTC => 100,\r\n#   2013-04-18 00:00:00 UTC => 34\r\n# }\r\n\r\nTask.group_by_month(:updated_at).count\r\n# {\r\n#   2013-02-01 00:00:00 UTC => 84,\r\n#   2013-03-01 00:00:00 UTC => 23,\r\n#   2013-04-01 00:00:00 UTC => 44\r\n# }\r\n\r\nGoal.group_by_year(:accomplished_at).count\r\n# {\r\n#   2011-01-01 00:00:00 UTC => 7,\r\n#   2012-01-01 00:00:00 UTC => 11,\r\n#   2013-01-01 00:00:00 UTC => 3\r\n# }\r\n```\r\n\r\nThe default time zone is `Time.zone`.  Pass a time zone as the second argument.\r\n\r\n```ruby\r\nUser.group_by_week(:created_at, \"Pacific Time (US & Canada)\").count\r\n# {\r\n#   2013-03-03 08:00:00 UTC => 80,\r\n#   2013-03-10 08:00:00 UTC => 70,\r\n#   2013-03-17 07:00:00 UTC => 54\r\n# }\r\n\r\n# equivalently\r\ntime_zone = ActiveSupport::TimeZone[\"Pacific Time (US & Canada)\"]\r\nUser.group_by_week(:created_at, time_zone).count\r\n```\r\n\r\n**Note:** Weeks start on Sunday.\r\n\r\nYou can also group by the day of the week or hour of the day.\r\n\r\n```ruby\r\n# day of the week\r\nUser.group_by_day_of_week(:created_at).count\r\n# {\r\n#   0 => 54, # Sunday\r\n#   1 => 2,  # Monday\r\n#   ...\r\n#   6 => 3   # Saturday\r\n# }\r\n\r\n# hour of the day\r\nUser.group_by_hour_of_day(:created_at, \"Pacific Time (US & Canada)\").count\r\n# {\r\n#   0 => 34,\r\n#   1 => 61,\r\n#   ...\r\n#   23 => 12\r\n# }\r\n```\r\n\r\nYou can order results with `group_field`.\r\n\r\n```ruby\r\nUser.group_by_day(:created_at).order(\"group_field desc\").limit(20).count\r\n```\r\n\r\nUse it with anything you can use `group` with:\r\n\r\n```ruby\r\nTask.completed.group_by_hour(:completed_at).average(:priority)\r\n```\r\n\r\nGo nuts!\r\n\r\n```ruby\r\nRequest.where(page: \"/home\").group_by_minute(:started_at).maximum(:request_time)\r\n```\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'groupdate'\r\n```\r\n\r\n#### For MySQL\r\n\r\n[Time zone support](http://dev.mysql.com/doc/refman/5.6/en/time-zone-support.html) must be installed on the server.\r\n\r\n```sh\r\nmysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql\r\n```\r\n\r\n#### For JRuby\r\n\r\nUse the master version of your JDBC adapter.  You will get incorrect results for versions before [this commit](https://github.com/jruby/activerecord-jdbc-adapter/commit/c1cdb7cec8d3f06fc54995e8d872d830bd0a4d91).\r\n\r\n```sh\r\n# postgresql\r\ngem \"activerecord-jdbcpostgresql-adapter\", github: \"jruby/activerecord-jdbc-adapter\"\r\n\r\n# mysql\r\ngem \"activerecord-jdbcmysql-adapter\", github: \"jruby/activerecord-jdbc-adapter\"\r\n```\r\n\r\n## Complete list\r\n\r\ngroup_by_?\r\n\r\n- second\r\n- minute\r\n- hour\r\n- day\r\n- week\r\n- month\r\n- year\r\n- hour_of_day\r\n- day_of_week\r\n\r\n## Note\r\n\r\nactiverecord <= 4.0.0.beta1 and the pg gem returns String objects instead of Time objects.\r\n[This is fixed on activerecord master](https://github.com/rails/rails/commit/2cc09441c2de57b024b11ba666ba1e72c2b20cfe)\r\n\r\n```ruby\r\nUser.group_by_day(:created_at).count\r\n\r\n# mysql2\r\n# pg and activerecord master\r\n{2013-04-22 00:00:00 UTC => 1} # Time object\r\n\r\n# pg and activerecord <= 4.0.0.beta1\r\n{\"2013-04-22 00:00:00+00\" => 1} # String\r\n```\r\n\r\nAnother data type inconsistency\r\n\r\n```ruby\r\nUser.group_by_day_of_week(:created_at).count\r\n\r\n# mysql2\r\n{0 => 1, 4 => 1} # Integer\r\n\r\n# pg and activerecord <= 4.0.0.beta1\r\n{\"0\" => 1, \"4\" => 1} # String\r\n\r\n# pg and activerecord master\r\n{0.0 => 1, 4.0 => 1} # Float\r\n```\r\n\r\nThese are *not* a result of groupdate (and unfortunately cannot be fixed by groupdate)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"UA-39027070-3","note":"Don't delete this file! It's used internally to help with page regeneration."}