{"name":"Groupdate","tagline":"","body":"# Groupdate\r\n\r\nThe simplest way to group by:\r\n\r\n- day\r\n- week\r\n- hour of the day\r\n- and more (complete list below)\r\n\r\n:tada: Time zones supported!! **the best part**\r\n\r\n:cake: Get the entire series - **the other best part**\r\n\r\nWorks with Rails 3.0+\r\n\r\nSupports PostgreSQL and MySQL\r\n\r\n[![Build Status](https://travis-ci.org/ankane/groupdate.png)](https://travis-ci.org/ankane/groupdate)\r\n\r\n:cupid: Goes hand in hand with [Chartkick](http://ankane.github.io/chartkick/)\r\n\r\n## Get Started\r\n\r\nGroup by day\r\n\r\n```ruby\r\nUser.group_by_day(:created_at).count\r\n# {\r\n#   2013-04-16 00:00:00 UTC => 50,\r\n#   2013-04-17 00:00:00 UTC => 100,\r\n#   2013-04-18 00:00:00 UTC => 34\r\n# }\r\n```\r\n\r\nResults are returned in ascending order by default, so no need to sort.\r\n\r\nYou can also group by:\r\n\r\n- second\r\n- minute\r\n- hour\r\n- week\r\n- month\r\n- year\r\n\r\nand\r\n\r\n- hour_of_day\r\n- day_of_week (Sunday = 0, Monday = 1, etc)\r\n\r\nUse it anywhere you can use `group`.\r\n\r\n### Time Zones\r\n\r\nThe default time zone is `Time.zone`.  Change this with:\r\n\r\n```ruby\r\nGroupdate.time_zone = \"Pacific Time (US & Canada)\"\r\n```\r\n\r\nor\r\n\r\n```ruby\r\nUser.group_by_week(:created_at, time_zone: \"Pacific Time (US & Canada)\").count\r\n# {\r\n#   2013-03-10 00:00:00 PST => 70,\r\n#   2013-03-17 00:00:00 PDT => 54,\r\n#   2013-03-24 00:00:00 PDT => 80\r\n# }\r\n```\r\n\r\nTime zone objects also work.\r\n\r\n### Week Start\r\n\r\nWeeks start on Sunday by default. Change this with:\r\n\r\n```ruby\r\nGroupdate.week_start = :mon # first three letters of day\r\n```\r\n\r\nor\r\n\r\n```ruby\r\nUser.group_by_week(:created_at, week_start: :mon).count\r\n```\r\n\r\n### Day Start\r\n\r\nYou can change the hour days start with:\r\n\r\n```ruby\r\nGroupdate.day_start = 2 # 2 am - 2 am\r\n```\r\n\r\nor\r\n\r\n```ruby\r\nUser.group_by_day(:created_at, day_start: 2).count\r\n```\r\n\r\n### Time Range\r\n\r\nTo get a specific time range, use:\r\n\r\n```ruby\r\nUser.group_by_day(:created_at, range: 2.weeks.ago.midnight..Time.now).count\r\n```\r\n\r\nTo get the most recent time periods, use:\r\n\r\n```ruby\r\nUser.group_by_week(:created_at, last: 8).count # last 8 weeks\r\n```\r\n\r\n### Order\r\n\r\nYou can order in descending order with:\r\n\r\n```ruby\r\nUser.group_by_day(:created_at).reverse_order.count\r\n```\r\n\r\nor\r\n\r\n```ruby\r\nUser.group_by_day(:created_at).order(\"day desc\").count\r\n```\r\n\r\n### Pretty Keys\r\n\r\nTo get keys in a different format, use:\r\n\r\n```ruby\r\nUser.group_by_hour_of_day(:created_at, format: \"%l %P\").count.keys.first # 12 am\r\n```\r\n\r\nTakes a `String`, which is passed to [strftime](http://strfti.me/), or a `Proc`\r\n\r\n## Installation\r\n\r\nAdd this line to your applicationâ€™s Gemfile:\r\n\r\n```ruby\r\ngem 'groupdate'\r\n```\r\n\r\n#### For MySQL\r\n\r\n[Time zone support](http://dev.mysql.com/doc/refman/5.6/en/time-zone-support.html) must be installed on the server.\r\n\r\n```sh\r\nmysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql\r\n```\r\n\r\n#### For JRuby\r\n\r\nUse the master version of your JDBC adapter.  You will get incorrect results for versions before [this commit](https://github.com/jruby/activerecord-jdbc-adapter/commit/c1cdb7cec8d3f06fc54995e8d872d830bd0a4d91).\r\n\r\n```ruby\r\n# postgresql\r\ngem \"activerecord-jdbcpostgresql-adapter\", :github => \"jruby/activerecord-jdbc-adapter\"\r\n\r\n# mysql\r\ngem \"activerecord-jdbcmysql-adapter\", :github => \"jruby/activerecord-jdbc-adapter\"\r\n```\r\n\r\n## Upgrading to 2.0\r\n\r\nGroupdate 2.0 brings a number a great improvements.  Here are two things to be aware of:\r\n\r\n- the entire series is returned by default\r\n- `ActiveSupport::TimeWithZone` keys are now returned for every database adapter - adapters previously returned `Time` or `String` keys\r\n\r\n## History\r\n\r\nView the [changelog](https://github.com/ankane/groupdate/blob/master/CHANGELOG.md)\r\n\r\nGroupdate follows [Semantic Versioning](http://semver.org/)\r\n\r\n## Contributing\r\n\r\nEveryone is encouraged to help improve this project. Here are a few ways you can help:\r\n\r\n- [Report bugs](https://github.com/ankane/groupdate/issues)\r\n- Fix bugs and [submit pull requests](https://github.com/ankane/groupdate/pulls)\r\n- Write, clarify, or fix documentation\r\n- Suggest or add new features\r\n","google":"UA-39027070-3","note":"Don't delete this file! It's used internally to help with page regeneration."}